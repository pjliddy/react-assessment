{"version":3,"sources":["components/PageHeader.js","components/NewItem.js","components/ToDoItem.js","components/ToDoList.js","components/App.js","index.js"],"names":["Header","_ref","onShowItemForm","numItems","numUnchecked","showItemForm","buttonClasses","concat","react_default","a","createElement","className","onClick","NewItem","state","title","description","date","checked","isValid","onFormCancel","event","preventDefault","_this","props","onCancel","onFormSubmit","length","submitForm","showMessage","setDate","dateString","values","split","setState","this","onSubmit","titleInput","focus","_this2","msgClasses","htmlFor","type","id","ref","input","onChange","e","target","value","placeholder","rows","React","Component","ToDoItem","toggleCheck","onToggleItem","item","deleteItem","onDeleteItem","_this$props$item","checkClasses","ToDoList","items","itemList","map","idx","src_components_ToDoItem","key","App","onCloseItemForm","onCreateItem","Object","toConsumableArray","filter","i","copy","assign","components_PageHeader","src_components_NewItem","src_components_ToDoList","ReactDOM","render","src_components_App","document","querySelector"],"mappings":"oTA6BeA,SAzBA,SAAAC,GAA8D,IAA3DC,EAA2DD,EAA3DC,eAAgBC,EAA2CF,EAA3CE,SAAUC,EAAiCH,EAAjCG,aAAcC,EAAmBJ,EAAnBI,aAElDC,EAAa,qBAAAC,OAAyBF,EAAoB,WAAL,IAE3D,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,iBAAyDR,GAE3DK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,sBAA8DP,IAGpEI,EAAAC,EAAAC,cAAA,UAAQC,UAAWL,EAAeM,QAASV,GACzCM,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cADf,gBCmGOE,oNAjHbC,MAAQ,CACNC,MAAO,GACPC,YAAa,GACbC,KAAM,GACNC,SAAS,EACTC,SAAS,KAIXC,aAAe,SAACC,GACdA,EAAMC,iBACNC,EAAKC,MAAMC,cAIbC,aAAe,SAACL,GACdA,EAAMC,iBAEFC,EAAKT,MAAMC,MAAMY,OAAS,EAC5BJ,EAAKK,aAELL,EAAKM,iBAqBTC,QAAU,SAACC,GACT,IAAMC,EAASD,EAAWE,MAAM,KAChCV,EAAKW,SAAS,CAAEjB,KAAI,GAAAV,OAAKyB,EAAO,GAAZ,KAAAzB,OAAkByB,EAAO,GAAzB,KAAAzB,OAA+ByB,EAAO,mFAjB1DG,KAAKX,MAAMY,SAAS,CAClBrB,MAAOoB,KAAKrB,MAAMC,MAClBC,YAAamB,KAAKrB,MAAME,YACxBC,KAAMkB,KAAKrB,MAAMG,KACjBC,QAASiB,KAAKrB,MAAMI,gDAMtBiB,KAAKD,SAAS,CAAEf,SAAS,IACzBgB,KAAKE,WAAWC,oDAWhBH,KAAKE,WAAWC,yCAGT,IAAAC,EAAAJ,KAEDK,EAAU,yBAAAjC,OAA6B4B,KAAKrB,MAAMK,QAAe,SAAL,IAElE,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,iBAEAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAO+B,QAAQ,SAAf,cAAkCjC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,eAClCH,EAAAC,EAAAC,cAAA,SACEgC,KAAK,OACLC,GAAG,QACHC,IAAK,SAACC,GAAYN,EAAKF,WAAaQ,GACpCC,SAAU,SAACC,GAAD,OAAOR,EAAKL,SAAS,CAACnB,MAAOgC,EAAEC,OAAOC,YAEpDzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAO+B,QAAQ,QAAf,YACAjC,EAAAC,EAAAC,cAAA,SAAOgC,KAAK,OAAOC,GAAG,OAAOO,YAAY,UACvCJ,SAAU,SAACC,GAAD,OAAOR,EAAKT,QAAQiB,EAAEC,OAAOC,YAI7CzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAO+B,QAAQ,eAAf,eACAjC,EAAAC,EAAAC,cAAA,YAAUiC,GAAG,cAAcQ,KAAK,IAC9BL,SAAU,SAACC,GAAD,OAAOR,EAAKL,SAAS,CAAClB,YAAa+B,EAAEC,OAAOC,YAI1DzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBC,QAASuB,KAAKf,cAAlD,UAGAZ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBC,QAASuB,KAAKT,cAApD,YAMJlB,EAAAC,EAAAC,cAAA,OAAKC,UAAW6B,GACdhC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,uCAGAH,EAAAC,EAAAC,cAAA,2EAxGQ0C,IAAMC,YC2CbC,oNAzCbC,YAAc,WACZhC,EAAKC,MAAMgC,aAAajC,EAAKC,MAAMiC,SAIrCC,WAAa,WACXnC,EAAKC,MAAMmC,aAAapC,EAAKC,MAAMiC,+EAG7B,IAAAlB,EAAAJ,KAAAyB,EAEwCzB,KAAKX,MAAMiC,KAAjD1C,EAFF6C,EAEE7C,MAAOC,EAFT4C,EAES5C,YAAaC,EAFtB2C,EAEsB3C,KAAMC,EAF5B0C,EAE4B1C,QAG5B2C,EAAY,kCAAAtD,OAAsCW,EAAe,QAAL,IAElE,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAWkD,EACZjD,QAAS,kBAAM2B,EAAKgB,iBACtB/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASI,GAErBE,GAAQT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,0BAA0BO,IAIxDD,GAAeR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeK,GAE5CR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAChBC,QAAS,kBAAM2B,EAAKmB,eACpBlD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAFf,wBAhCayC,IAAMC,YCqBdS,SApBE,SAAA7D,GAA2C,IAAxC8D,EAAwC9D,EAAxC8D,MAAOP,EAAiCvD,EAAjCuD,aAAcG,EAAmB1D,EAAnB0D,aAEjCK,EAAWD,EAAME,IAAI,SAACR,EAAMS,GAChC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,CACLV,KAAMA,EACNW,IAAKF,EACLV,aAAcA,EACdG,aAAcA,MAIlB,OACEnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACZqD,MCoEMK,oNA9EbvD,MAAQ,CACNiD,MAAO,GACP5D,SAAU,EACVC,aAAc,EACdC,cAAc,KAIhBH,eAAiB,WACfqB,EAAKW,SAAS,CAAE7B,cAAc,OAIhCiE,gBAAkB,WAChB/C,EAAKW,SAAS,CAAE7B,cAAc,OAIhCkE,aAAe,SAAAd,GACblC,EAAKW,SAAS,CACZ6B,MAAK,GAAAxD,OAAAiE,OAAAC,EAAA,EAAAD,CAAMjD,EAAKT,MAAMiD,OAAjB,CAAwBN,IAC7BpD,cAAc,EACdF,SAAUoB,EAAKT,MAAMX,SAAW,EAChCC,aAAcmB,EAAKT,MAAMV,aAAe,OAK5CuD,aAAe,SAAAF,GACblC,EAAKW,SAAS,CACZ6B,MAAOxC,EAAKT,MAAMiD,MAAMW,OAAO,SAAAC,GAAC,OAAIA,IAAMlB,IAC1CtD,SAAUoB,EAAKT,MAAMX,SAAW,EAChCC,aAAcmB,EAAKT,MAAMV,cAAgBqD,EAAKvC,QAAU,GAAK,QAKjEsC,aAAe,SAAAC,GAEb,IAAMmB,EAAOJ,OAAOK,OAAO,GAAIpB,GAC/BmB,EAAK1D,SAAW0D,EAAK1D,QAGrBK,EAAKW,SAAS,SAAApB,GACZ,MAAO,CACLiD,MAAOjD,EAAMiD,MAAME,IAAI,SAAAlB,GAAC,OAAIA,IAAMU,EAAOmB,EAAO7B,IAChD3C,aAAcmB,EAAKT,MAAMV,cAAgBwE,EAAK1D,SAAW,EAAI,+EAMjE,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACoE,EAAD,CACE3E,SAAUgC,KAAKrB,MAAMX,SACrBC,aAAc+B,KAAKrB,MAAMV,aACzBC,aAAc8B,KAAKrB,MAAMT,aACzBH,eAAgBiC,KAAKjC,iBAItBiC,KAAKrB,MAAMT,cACVG,EAAAC,EAAAC,cAACqE,EAAD,CACE3C,SAAUD,KAAKoC,aACf9C,SAAUU,KAAKmC,kBAGnB9D,EAAAC,EAAAC,cAACsE,EAAD,CACEjB,MAAO5B,KAAKrB,MAAMiD,MAClBP,aAAcrB,KAAKqB,aACnBG,aAAcxB,KAAKwB,uBAzEXP,IAAMC,YCFxB4B,IAASC,OACP1E,EAAAC,EAAAC,cAACyE,EAAD,MACAC,SAASC,cAAc","file":"static/js/main.0a2bd583.chunk.js","sourcesContent":["import React from 'react';\nimport './PageHeader.scss';\n\n// page header functional component\nconst Header = ({ onShowItemForm, numItems, numUnchecked, showItemForm }) => {\n  // conditionally define button classes based on whether itemForm is visible\n  const buttonClasses = `ui primary button ${!showItemForm ? '' : 'disabled'}`;\n\n  return(\n    <div className='page-header'>\n      <h1 className=\"ui header\">My ToDo List</h1>\n      <div className=\"toolbar\">\n        <div className='header-data'>\n            <div className='header-data-item'>\n              <span className=\"header-data-label\">Total Items: </span>{numItems}\n            </div>\n            <div className='header-data-item'>\n              <span className=\"header-data-label\">Items Left To Do: </span>{numUnchecked}\n            </div>\n        </div>\n        <button className={buttonClasses} onClick={onShowItemForm}>\n          <i className=\"icon plus\"></i>\n          New Item\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './NewItem.scss';\n\n// new item input form component\nclass NewItem extends React.Component {\n  // initialize form state\n  state = {\n    title: '',\n    description: '',\n    date: '',\n    checked: false,\n    isValid: true\n  };\n\n  // event handler for cancel button on form executes onCancel callback\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onCancel();\n  }\n\n  // event handler for submit button on form\n  onFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.title.length > 0) {\n      this.submitForm();\n    } else {\n      this.showMessage();\n    }\n  }\n\n  // execute onSubmit callback with values for new item\n  submitForm() {\n    this.props.onSubmit({\n      title: this.state.title,\n      description: this.state.description,\n      date: this.state.date,\n      checked: this.state.checked\n    });\n  }\n\n  // display validation error message\n  showMessage() {\n    this.setState({ isValid: false });\n    this.titleInput.focus();\n  }\n\n  // convert default date string to mm/dd/yyyy\n  setDate = (dateString) => {\n    const values = dateString.split('-');\n    this.setState({ date: `${values[1]}/${values[2]}/${values[0]}` });\n  };\n\n  // set focus on title input when form is displayed\n  componentDidMount() {\n    this.titleInput.focus();\n  }\n\n  render() {\n    // conditionally define message classes based on whether form is valid\n    const msgClasses = `ui icon error message ${!this.state.isValid ? '' : 'hidden' }`;\n\n    return (\n      <div className=\"new-item\">\n        <div className=\"ui segment\">\n          <h3 className=\"ui dividing header\">New ToDo Item</h3>\n\n          <form className=\"ui large form\">\n\n            <div className=\"fields\">\n              <div className=\"eleven wide field\">\n                <label htmlFor=\"title\">Item Title <span className=\"required\">(required)</span></label>\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  ref={(input) => { this.titleInput = input; }}\n                  onChange={(e) => this.setState({title: e.target.value})} />\n              </div>\n              <div className=\"five wide field\">\n                <label htmlFor=\"date\">Due Date</label>\n                <input type=\"date\" id=\"date\" placeholder=\"Date...\"\n                  onChange={(e) => this.setDate(e.target.value)}/>\n              </div>\n            </div>\n\n            <div className=\"field\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea id=\"description\" rows=\"3\"\n                onChange={(e) => this.setState({description: e.target.value})}>\n              </textarea>\n            </div>\n\n            <div className=\"button-row\">\n              <button className=\"ui button basic\" onClick={this.onFormCancel}>\n                Cancel\n              </button>\n              <button className=\"ui button primary\" onClick={this.onFormSubmit}>\n                Create\n              </button>\n            </div>\n          </form>\n\n          <div className={msgClasses}>\n            <i className=\"icon big frown outline\"></i>\n            <div className=\"content\">\n              <div className=\"header\">\n                Your ToDo Item has to have a title.\n              </div>\n              <p>\n                How else are you going to know what you need to do?\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewItem;\n","import React from 'react';\nimport './ToDoItem.scss';\n\n// individual toDo item component\nclass ToDoItem extends React.Component {\n  // execute callback when checkbox is clicked\n  toggleCheck = () => {\n    this.props.onToggleItem(this.props.item);\n  }\n\n  // execute callback when delete button is clicked\n  deleteItem = () => {\n    this.props.onDeleteItem(this.props.item);\n  }\n\n  render(){\n    // destructure properties for item in props\n    const { title, description, date, checked } = this.props.item;\n    \n    // conditionally define checkbox classes based on whether item is checked\n    const checkClasses = `icon large link square outline ${!checked ? '' : 'check'}`;\n\n    return (\n      <div className=\"item todo-item\">\n        <i className={checkClasses}\n          onClick={() => this.toggleCheck()}></i>\n        <div className=\"content\">\n          <div className=\"header\">\n            <p className=\"title\">{title}</p>\n            {/* conditionally display date if there is a value */}\n            {date && <p className=\"date\"><strong>Due on: </strong>{date}</p>}\n          </div>\n\n          {/* conditionally display description if there is a value */}\n          {description && <p className=\"description\">{description}</p>}\n\n          <button className=\"ui right floated button basic\"\n            onClick={() => this.deleteItem()}>\n            <i className=\"icon trash alternate outline\"></i>\n            Delete Item\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ToDoItem;\n","import React from 'react';\nimport ToDoItem from './ToDoItem';\nimport './ToDoList.scss';\n\n// toDo list functional component\nconst ToDoList = ({ items, onToggleItem, onDeleteItem }) => {\n  // generate list of ToDoItem components\n  const itemList = items.map((item, idx) => {\n    return <ToDoItem\n      item={item}\n      key={idx}\n      onToggleItem={onToggleItem}\n      onDeleteItem={onDeleteItem}\n    />\n  });\n\n  return(\n    <div className=\"todo-list\">\n      <div className=\"ui very relaxed divided list\">\n        {itemList}\n      </div>\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import React from 'react';\nimport PageHeader from './PageHeader';\nimport NewItem from './NewItem';\nimport ToDoList from './ToDoList';\nimport './App.scss';\n\n// top-level App component\nclass App extends React.Component {\n  // initialize App state\n  state = {\n    items: [],\n    numItems: 0,\n    numUnchecked: 0,\n    showItemForm: false\n  };\n\n  // event handler for displaying item creation form\n  onShowItemForm = () => {\n    this.setState({ showItemForm: true });\n  }\n\n  // event handler for hiding item creation form\n  onCloseItemForm = () => {\n    this.setState({ showItemForm: false });\n  }\n\n  // event handler for submitting item creation form\n  onCreateItem = item => {\n    this.setState({\n      items: [...this.state.items, item],\n      showItemForm: false,\n      numItems: this.state.numItems + 1,\n      numUnchecked: this.state.numUnchecked + 1\n    });\n  }\n\n  // event handler for deleting an item\n  onDeleteItem = item => {\n    this.setState({\n      items: this.state.items.filter(i => i !== item),\n      numItems: this.state.numItems - 1,\n      numUnchecked: this.state.numUnchecked + (item.checked ? 0 : -1)\n    });\n  }\n\n  // event handler for toggling the checked property of an item\n  onToggleItem = item => {\n    // change checked property on copy of item object\n    const copy = Object.assign({}, item);\n    copy.checked = !copy.checked;\n\n    // replace item object and update numUnchecked in state\n    this.setState(state => {\n      return {\n        items: state.items.map(e => e === item ? copy : e),\n        numUnchecked: this.state.numUnchecked + (copy.checked ? -1 : 1)\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"ui container text\">\n        <PageHeader\n          numItems={this.state.numItems}\n          numUnchecked={this.state.numUnchecked}\n          showItemForm={this.state.showItemForm}\n          onShowItemForm={this.onShowItemForm}\n        />\n\n        {/* conditionally display NewItem form based on showItemForm */}\n        {this.state.showItemForm &&\n          <NewItem\n            onSubmit={this.onCreateItem}\n            onCancel={this.onCloseItemForm}\n          />\n        }\n        <ToDoList\n          items={this.state.items}\n          onToggleItem={this.onToggleItem}\n          onDeleteItem={this.onDeleteItem}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}